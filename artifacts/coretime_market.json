{
  "source": {
    "hash": "0xadd2581963462cb825f96246a8d9131b4845eb80d1beb3893ccbbbad734b5f54",
    "language": "ink! 4.3.0",
    "compiler": "rustc 1.76.0-nightly",
    "build_info": {
      "build_mode": "Debug",
      "cargo_contract_version": "3.2.0",
      "rust_toolchain": "nightly-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "coretime_market",
    "version": "0.1.0",
    "authors": [
      "RegionX <support@regionx.tech>"
    ],
    "description": "Secondary Coretime marketpalce contract."
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "xc_regions_contract",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "label": "listing_deposit",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 6
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 3
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 4
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 29
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 28
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 13
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [
              " The identifier of the region that got listed on sale."
            ],
            "indexed": true,
            "label": "region_id",
            "type": {
              "displayName": [
                "RawRegionId"
              ],
              "type": 3
            }
          },
          {
            "docs": [
              " The per timeslice price of the listed region."
            ],
            "indexed": false,
            "label": "timeslice_price",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 3
            }
          },
          {
            "docs": [
              " The seller of the region"
            ],
            "indexed": false,
            "label": "seller",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [
              " The sale revenue recipient."
            ],
            "indexed": false,
            "label": "sale_recepient",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [
              " The metadata version of the region."
            ],
            "indexed": false,
            "label": "metadata_version",
            "type": {
              "displayName": [
                "Version"
              ],
              "type": 4
            }
          }
        ],
        "docs": [],
        "label": "RegionListed"
      },
      {
        "args": [
          {
            "docs": [
              " The identifier of the region that got listed on sale."
            ],
            "indexed": true,
            "label": "region_id",
            "type": {
              "displayName": [
                "RawRegionId"
              ],
              "type": 3
            }
          },
          {
            "docs": [
              " The buyer of the region"
            ],
            "indexed": false,
            "label": "buyer",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [
              " The total price paid for the listed region."
            ],
            "indexed": false,
            "label": "total_price",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 3
            }
          }
        ],
        "docs": [],
        "label": "RegionPurchased"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 8
    },
    "messages": [
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "xc_regions_contract",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 9
        },
        "selector": "0xa4edc593"
      },
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "listed_regions",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0xa2cf234e"
      },
      {
        "args": [
          {
            "label": "id",
            "type": {
              "displayName": [
                "Id"
              ],
              "type": 11
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "listed_region",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 15
        },
        "selector": "0x67d48f4e"
      },
      {
        "args": [
          {
            "label": "id",
            "type": {
              "displayName": [
                "Id"
              ],
              "type": 11
            }
          }
        ],
        "default": false,
        "docs": [],
        "label": "region_price",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 23
        },
        "selector": "0x6f91fe12"
      },
      {
        "args": [
          {
            "label": "id",
            "type": {
              "displayName": [
                "Id"
              ],
              "type": 11
            }
          },
          {
            "label": "timeslice_price",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 3
            }
          },
          {
            "label": "sale_recepient",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 25
            }
          }
        ],
        "default": false,
        "docs": [
          " A function for listing a region on sale.",
          "",
          " ## Arguments:",
          " - `region_id`: The `u128` encoded identifier of the region that the caller intends to",
          "   list for sale.",
          " - `timeslice_price`: The price per a single timeslice.",
          " - `sale_recepient`: The `AccountId` receiving the payment from the sale. If not",
          "   specified this will be the caller.",
          "",
          " Before making this call, the caller must first approve their region to the market",
          " contract, as it will be transferred to the contract when listed for sale.",
          "",
          " This call is payable because listing a region requires a deposit from the user. This",
          " deposit will be returned upon unlisting the region from sale. The rationale behind this",
          " requirement is to prevent the contract state from becoming bloated with regions that",
          " have expired."
        ],
        "label": "list_region",
        "mutates": true,
        "payable": true,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0xad229eb3"
      },
      {
        "args": [
          {
            "label": "_region_id",
            "type": {
              "displayName": [
                "RawRegionId"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " A function for unlisting a region on sale.",
          "",
          " ## Arguments:",
          " - `region_id`: The `u128` encoded identifier of the region that the caller intends to",
          "   unlist from sale."
        ],
        "label": "unlist_region",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0x2cda3dc9"
      },
      {
        "args": [
          {
            "label": "_region_id",
            "type": {
              "displayName": [
                "RawRegionId"
              ],
              "type": 3
            }
          },
          {
            "label": "_new_timeslice_price",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 3
            }
          }
        ],
        "default": false,
        "docs": [
          " A function for updating a listed region's bit price.",
          "",
          " ## Arguments:",
          " - `region_id`: The `u128` encoded identifier of the region being listed for sale.",
          " - `timeslice_price`: The new per timeslice price of the region."
        ],
        "label": "update_region_price",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0x90fd261d"
      },
      {
        "args": [
          {
            "label": "id",
            "type": {
              "displayName": [
                "Id"
              ],
              "type": 11
            }
          },
          {
            "label": "metadata_version",
            "type": {
              "displayName": [
                "Version"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " A function for purchasing a region listed on sale.",
          "",
          " ## Arguments:",
          " - `region_id`: The `u128` encoded identifier of the region being listed for sale.",
          " - `metadata_version`: The required metadata version for the region. If the",
          "   `metadata_version` does not match the current version stored in the xc-regions",
          "   contract the purchase will fail.",
          "",
          " IMPORTANT NOTE: The client is responsible for ensuring that the metadata of the listed",
          " region is correct."
        ],
        "label": "purchase_region",
        "mutates": true,
        "payable": true,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0xa2f9e3b0"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "root": {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x17f3ca29",
                              "ty": 0
                            }
                          },
                          "name": "seller"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x17f3ca29",
                              "ty": 3
                            }
                          },
                          "name": "timeslice_price"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x17f3ca29",
                              "ty": 0
                            }
                          },
                          "name": "sale_recepient"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x17f3ca29",
                              "ty": 4
                            }
                          },
                          "name": "metadata_version"
                        }
                      ],
                      "name": "Listing"
                    }
                  },
                  "root_key": "0x17f3ca29"
                }
              },
              "name": "listings"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 5
                }
              },
              "name": "listed_regions"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 0
                }
              },
              "name": "xc_regions_contract"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 3
                }
              },
              "name": "listing_deposit"
            }
          ],
          "name": "CoretimeMarket"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "sequence": {
            "type": 3
          }
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 7
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 2,
                    "typeName": "u8"
                  }
                ],
                "index": 0,
                "name": "U8"
              },
              {
                "fields": [
                  {
                    "type": 12,
                    "typeName": "u16"
                  }
                ],
                "index": 1,
                "name": "U16"
              },
              {
                "fields": [
                  {
                    "type": 4,
                    "typeName": "u32"
                  }
                ],
                "index": 2,
                "name": "U32"
              },
              {
                "fields": [
                  {
                    "type": 13,
                    "typeName": "u64"
                  }
                ],
                "index": 3,
                "name": "U64"
              },
              {
                "fields": [
                  {
                    "type": 3,
                    "typeName": "u128"
                  }
                ],
                "index": 4,
                "name": "U128"
              },
              {
                "fields": [
                  {
                    "type": 14,
                    "typeName": "Vec<u8>"
                  }
                ],
                "index": 5,
                "name": "Bytes"
              }
            ]
          }
        },
        "path": [
          "openbrush_contracts",
          "traits",
          "types",
          "Id"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "primitive": "u16"
        }
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "sequence": {
            "type": 2
          }
        }
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 16
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 16
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 17
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 17
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 18
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "seller",
                "type": 0,
                "typeName": "AccountId"
              },
              {
                "name": "timeslice_price",
                "type": 3,
                "typeName": "Balance"
              },
              {
                "name": "sale_recepient",
                "type": 0,
                "typeName": "AccountId"
              },
              {
                "name": "metadata_version",
                "type": 4,
                "typeName": "Version"
              }
            ]
          }
        },
        "path": [
          "coretime_market",
          "types",
          "Listing"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "ArithmeticError"
              },
              {
                "index": 1,
                "name": "InvalidRegionId"
              },
              {
                "index": 2,
                "name": "InvalidTimeslice"
              },
              {
                "index": 3,
                "name": "RegionExpired"
              },
              {
                "index": 4,
                "name": "MissingDeposit"
              },
              {
                "index": 5,
                "name": "RegionNotListed"
              },
              {
                "index": 6,
                "name": "InsufficientFunds"
              },
              {
                "index": 7,
                "name": "MetadataNotMatching"
              },
              {
                "index": 8,
                "name": "TransferFailed"
              },
              {
                "fields": [
                  {
                    "type": 20,
                    "typeName": "PSP34Error"
                  }
                ],
                "index": 9,
                "name": "XcRegionsPsp34Error"
              },
              {
                "fields": [
                  {
                    "type": 22,
                    "typeName": "XcRegionsError"
                  }
                ],
                "index": 10,
                "name": "XcRegionsMetadataError"
              }
            ]
          }
        },
        "path": [
          "coretime_market",
          "types",
          "MarketError"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 21,
                    "typeName": "String"
                  }
                ],
                "index": 0,
                "name": "Custom"
              },
              {
                "index": 1,
                "name": "SelfApprove"
              },
              {
                "index": 2,
                "name": "NotApproved"
              },
              {
                "index": 3,
                "name": "TokenExists"
              },
              {
                "index": 4,
                "name": "TokenNotExists"
              },
              {
                "fields": [
                  {
                    "type": 21,
                    "typeName": "String"
                  }
                ],
                "index": 5,
                "name": "SafeTransferCheckFailed"
              }
            ]
          }
        },
        "path": [
          "openbrush_contracts",
          "traits",
          "errors",
          "psp34",
          "PSP34Error"
        ]
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "CannotInitialize"
              },
              {
                "index": 1,
                "name": "CannotRemove"
              },
              {
                "index": 2,
                "name": "MetadataNotFound"
              },
              {
                "index": 3,
                "name": "InvalidMetadata"
              },
              {
                "index": 4,
                "name": "VersionNotFound"
              },
              {
                "index": 5,
                "name": "RuntimeError"
              },
              {
                "fields": [
                  {
                    "type": 20,
                    "typeName": "PSP34Error"
                  }
                ],
                "index": 6,
                "name": "Psp34"
              }
            ]
          }
        },
        "path": [
          "xc_regions",
          "types",
          "XcRegionsError"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 24
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 24
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 27
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 27
          },
          {
            "name": "E",
            "type": 8
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 7
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 19
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 7
          },
          {
            "name": "E",
            "type": 19
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "composite": {}
        },
        "path": [
          "extension",
          "Extension"
        ]
      }
    }
  ],
  "version": "4"
}